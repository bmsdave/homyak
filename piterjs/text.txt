В отличии от атак на серверную часть, клиентские атаки часто ориентированы непосредственно на пользователя, то есть включают в себя социальную составляющую: нам, как атакующей стороне, нужно заставить другого человека произвести определенные действия (перейти по определенной ссылке, прочитать письмо) для реализации атаки. Естественно, во время нашего курса мы не будем никого никуда заводить ( хотя было бы забавно), вместо этого мы сосредоточимся на технических моментах проведения атаки.


client side - нужно подталкнуть пользователя на какое-либо действие.


Same-origin policy это основной механизм защиты данных и методов, пришедших из разных источников. Представьте себе, что было бы, если бы этот механизм не работал: мы создаем сайт на любом, выбранном нам домене, после чего заманиваем туда пользователей. Когда пользователь заходит к нам на сайт, мы подгружаем ему javascript, который читает все его письма с gmail, где пользователь залогинен параллельно, а вишенкой на торте - мы отправляем спам всем его друзьям в facebook. В реальной жизни подобное вот так вот напрямую провернуть нельзя и именно из-за SOP, обход которой и является целью большинства клиентских атак.


CSRF расшифровывается как cross-site request forgery. Данная атака базируется на одной из основных идей www - идее о том, что страницы могут включать в себя содержимое из разных источников. Это достаточно простая атака, но может дать весьма интересные результаты при грамотном подходе.

XSS-атаки - пожалуй, самый распространенный тип атак. Найти просто - всё, что нужно, это тщательно изучить код страницы и входные параметры. Защититься проблематично - вылезать может в совершенно неожиданных местах. Степень опасности - от незначительной до ... просто почитайте эту историю, почти технотриллер, о том, как поломали apache.org: https://blogs.apache.org/infra/entry/apache_org_04_09_2010﻿